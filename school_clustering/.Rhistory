options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/Research_and_Projects/dead_projects/airtime/cluster_files")
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
library(NbClust)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
x <- read.csv("dataset_with_clusters.csv", header = TRUE)
y <- select(x, pct_school_lunch, median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
z <- as.data.frame(lapply(y, standardize))
set.seed(1234)
to_test <- sample(row.names(z), size = 1000)
to_test <- z[to_test,]
nc <- NbClust(data = to_test, min.nc = 2, max.nc = 15, method = "kmeans")
set.seed(1234)
modFit <- kmeans(z,6, nstart = 25)
y$cluster <- modFit$cluster
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
dev.off()
x <- read_csv("dataset_with_clusters.csv") %>%
select(x, pct_school_lunch, median_hh_income, pct_minority, enrollment)
x <- read_csv("dataset_with_clusters.csv") %>%
select(pct_school_lunch, median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
View(x)
z <- x %>% mutate_all(standardize)
View(x)
View(z)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
x <- read_csv("dataset_with_clusters.csv") %>%
select(pct_school_lunch, median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
x <- x %>% mutate_all(standardize)
set.seed(1234)
k_fit <- kmeans(z,6, nstart = 25)
set.seed(1234)
k_fit <- kmeans(x,6, nstart = 25)
x <- x %>% mutate(cluster = k_fit$cluster)
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = mean(pct_school_lunch),sd_pct_school_lunch = sd(pct_school_lunch),
avg_median_hh = mean(median_hh_income),sd_median_hh_income = sd(median_hh_income),
avg_minority = mean(pct_minority),sd_pct_minority = sd(pct_minority),
avg_enrollment = mean(enrollment),sd_enrollment = sd(enrollment),
school_number = n())
cluster_statistics
View(x)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
x <- read_csv("dataset_with_clusters.csv") %>%
select(pct_school_lunch, median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
##Fit K-means and
set.seed(1234)
k_fit <- kmeans(x %>% mutate_all(standardize),6, nstart = 25)
x <- x %>% mutate(cluster = k_fit$cluster)
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = mean(pct_school_lunch),sd_pct_school_lunch = sd(pct_school_lunch),
avg_median_hh = mean(median_hh_income),sd_median_hh_income = sd(median_hh_income),
avg_minority = mean(pct_minority),sd_pct_minority = sd(pct_minority),
avg_enrollment = mean(enrollment),sd_enrollment = sd(enrollment),
school_number = n())
cluster_statistics
##
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_minority = mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n())
cluster_statistics
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_non_white = mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n())
cluster_statistics
pca <- prcomp(x,center = TRUE, scale = TRUE)
pcaObj$sdev^2/sum(pcaObj$sdev^2)*100
pca$sdev^2/sum(pca$sdev^2)*100
round(pca$sdev^2/sum(pca$sdev^2)*100)
explained_variance <- tibble(component = 1:5, explained_variance = pca$sdev^2/sum(pca$sdev^2)*100)
explained_variance
explained_variance <- tibble(component = 1:5, explained_variance = pca$sdev^2/sum(pca$sdev^2)*100)
explained_variance %>% ggplot(aes(x = component, y = explained_variance)) + geom_col() +
theme_minimal()
pca <- prcomp(x,center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:5, explained_variance = pca$sdev^2/sum(pca$sdev^2)*100)
explained_variance %>% ggplot(aes(x = component, y = explained_variance, label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance",main = "Explained variance for each component")
##PCA
pca <- prcomp(x,center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:5, explained_variance = pca$sdev^2/sum(pca$sdev^2)*100)
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca <- prcomp(x,center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:5, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,2))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
##PCA
pca <- prcomp(x,center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:5, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca$x
pca_tibble <- tibble(pc1 = pca$x[,1], pc2 = pca$x[,2])
pca_tibble <- tibble(pc1 = pca$x[,1], pc2 = pca$x[,2]) %>%
mutate(cluster = x$cluster)
pca_tibble
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point() + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component")
##PCA
pca <- prcomp(x,center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:5, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca_tibble <- tibble(pc1 = pca$x[,1], pc2 = pca$x[,2]) %>%
mutate(cluster = x$cluster)
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point() + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment")
pca$rotation
x %>% select(-cluster)
pca <- prcomp(x %>% select(-cluster),center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:5, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
##PCA
pca <- prcomp(x %>% select(-cluster),center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:4, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca <- prcomp(x %>% select(-cluster),center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:4, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca_tibble <- tibble(pc1 = pca$x[,1], pc2 = pca$x[,2]) %>%
mutate(cluster = x$cluster)
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point() + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment")
round(pca$rotation,2)
cluster_statistics
as_tibble(round(pca$rotation,2))
round(pca$rotation,2)
round(pca$rotation,2)
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_non_white = mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n())
cluster_statistics
##
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = 100*mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_non_white = 100*mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n())
cluster_statistics
cluster_statistics %>%
magrittr::set_colnames(c("Cluster", "Mean % school lunch",
"Mean zip median household income",
"Mean % non-white",
"Mean enrollment",
"Total schools in cluster"))
cluster_statistics %>%
magrittr::set_colnames(c("Cluster", "Mean % school lunch",
"Mean zip median household income",
"Mean % non-white",
"Mean enrollment",
"Total schools"))
round(pca$rotation,2)
cluster_statistics
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = 100*mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_non_white = 100*mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n()) %>%
magrittr::set_colnames(c("Cluster", "Mean % school lunch",
"Mean zip median household income",
"Mean % non-white",
"Mean enrollment",
"Total schools"))
cluster_statistics
cluster_statistics
round(pca$rotation,2)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
x <- read_csv("dataset_with_clusters.csv") %>%
select(median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
##Fit K-means and
set.seed(1234)
k_fit <- kmeans(x %>% mutate_all(standardize),6, nstart = 25)
x <- x %>% mutate(cluster = k_fit$cluster)
##
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = 100*mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_non_white = 100*mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n()) %>%
magrittr::set_colnames(c("Cluster", "Mean % school lunch",
"Mean zip median household income",
"Mean % non-white",
"Mean enrollment",
"Total schools"))
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
x <- read_csv("dataset_with_clusters.csv") %>%
select(median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
x
##Fit K-means and
set.seed(1234)
k_fit <- kmeans(x %>% mutate_all(standardize),6, nstart = 25)
?kmeans
##Fit K-means and
set.seed(1234)
k_fit <- kmeans(x %>% mutate_all(standardize),6, nstart = 25, iter.max = 20)
x <- x %>% mutate(cluster = k_fit$cluster)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
x <- read_csv("dataset_with_clusters.csv") %>%
select(median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
##Fit K-means and
set.seed(1234)
k_fit <- kmeans(x %>% mutate_all(standardize),6, nstart = 25, iter.max = 20)
x <- x %>% mutate(cluster = k_fit$cluster)
##
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_median_hh = mean(median_hh_income),
avg_non_white = 100*mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n()) %>%
magrittr::set_colnames(c("Cluster",
"Mean zip median household income",
"Mean % non-white",
"Mean enrollment",
"Total schools"))
pca <- prcomp(x %>% select(-cluster),center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:4, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca <- prcomp(x %>% select(-cluster),center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:3, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
cluster_statistics
pca_tibble <- tibble(pc1 = pca$x[,1], pc2 = pca$x[,2]) %>%
mutate(cluster = x$cluster)
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point() + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment",
title = "Principal Component Graph ")
round(pca$rotation,2)
cluster_statistics
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/school_clustering/")
library(tidyverse);library(readxl)
x <- read_csv("dataset_with_clusters.csv") %>%
select(pct_school_lunch, median_hh_income, pct_minority, enrollment)
standardize <- function(my_list){
numerator <- (my_list - mean(my_list))
denominator <- sd(my_list)
last <- numerator/denominator
last <- round(last, 3)
return(last)
}
##Fit K-means and
set.seed(1234)
k_fit <- kmeans(x %>% mutate_all(standardize),6, nstart = 25)
x <- x %>% mutate(cluster = k_fit$cluster)
##
cluster_statistics <- x %>% group_by(cluster) %>%
dplyr::summarise(avg_school_lunch = 100*mean(pct_school_lunch),
avg_median_hh = mean(median_hh_income),
avg_non_white = 100*mean(pct_minority),
avg_enrollment = mean(enrollment),
school_number = n()) %>%
magrittr::set_colnames(c("Cluster", "Mean % school lunch",
"Mean zip median household income",
"Mean % non-white",
"Mean enrollment",
"Total schools"))
##PCA
pca <- prcomp(x %>% select(-cluster),center = TRUE, scale = TRUE)
explained_variance <- tibble(component = 1:4, explained_variance = round(pca$sdev^2/sum(pca$sdev^2)*100,1))
explained_variance %>% ggplot(aes(x = component, y = round(explained_variance,2), label= explained_variance)) + geom_col() +
theme_minimal() + geom_label() +
labs(x = "Component", y= "Explained Variance in %",title = "Explained variance for each component")
pca_tibble <- tibble(pc1 = pca$x[,1], pc2 = pca$x[,2]) %>%
mutate(cluster = x$cluster)
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point() + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment",
title = "Principal Component Graph ")
round(pca$rotation,2)
cluster_statistics
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point(size = 0.5) + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment",
title = "Scores for the first two principal components")
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point(size = 0.5) + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment",
title = "Scores for the first two principal components")
View(x)
dev.off()
school_list <- read_csv("dataset_with_clusters.csv")
View(school_list)
school_list <- read_csv("dataset_with_clusters.csv") %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County"))
remove(school_list)
ny_list <- read_csv("dataset_with_clusters.csv") %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
select(latcod, loncod) %>%
rename(lat = latcod, lon = loncod) %>%
mutate(cluster = x$cluster)
View(x)
ny_l
ny_list
ny_list <- read_csv("dataset_with_clusters.csv") %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
select(latcod, loncod) %>%
rename(lat = latcod, lon = loncod) %>%
mutate(cluster = x$cluster)
##Let's do New York
ny_list <- read_csv("dataset_with_clusters.csv") %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
mutate(cluster = x$cluster) %>%
select(latcod, loncod, cluster) %>%
rename(lat = latcod, lon = loncod)
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
select(latcod, loncod, cluster) %>%
rename(lat = latcod, lon = loncod)
read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster)
read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County"))
read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
select(latcod, loncod, cluster)
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
select(latcod, loncod, cluster) %>%
rename(lat = latcod, lon = loncod)
##Let's do New York
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
dplyr::select(latcod, loncod, cluster) %>%
dplyr::rename(lat = latcod, lon = loncod)
View(ny_list)
pca_tibble %>% ggplot(aes(x = pc1, y = pc2, color = as.character(cluster))) +
geom_point(size = 0.5) + theme_bw() +
labs(x = "First Principal Component", y = "Second Principal Component", color = "Cluster assignment",
title = "Scores for the first two principal components")
##New York: Send this to visualize in tableau
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County")) %>%
dplyr::select(latcod, loncod, cluster) %>%
dplyr::rename(lat = latcod, lon = loncod)
write_csv(ny_list, "new_york_school_list.csv")
read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County") & state == "NY")
ny_list <- read_csv("dataset_with_clusters.csv")
View(ny_list)
##New York: Send this to visualize in tableau
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County") & lstate == "NY") %>%
dplyr::select(latcod, loncod, cluster) %>%
dplyr::rename(lat = latcod, lon = loncod)
write_csv(ny_list, "new_york_school_list.csv")
ny_list <- read_csv("dataset_with_clusters.csv")
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Westchester County","Rockland County") & lstate == "NY") %>%
dplyr::select(latcod, loncod, cluster, enrollment) %>%
dplyr::rename(lat = latcod, lon = loncod)
write_csv(ny_list, "new_york_school_list.csv")
##New York: Send this to visualize in tableau
ny_list <- read_csv("dataset_with_clusters.csv") %>%
mutate(cluster = x$cluster) %>%
filter(county %in% c("New York County", "Kings County", "Queens County", "Bronx County",
"Richmond County") & lstate == "NY") %>%
dplyr::select(latcod, loncod, cluster, enrollment) %>%
dplyr::rename(lat = latcod, lon = loncod)
write_csv(ny_list, "new_york_school_list.csv")

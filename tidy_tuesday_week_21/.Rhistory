write.xlsx(a_4, file = paste(file_name,".xlsx",sep = ""), sheetName = "sports", append=TRUE, row.names = FALSE)
write.xlsx(a_5, file = paste(file_name,".xlsx",sep = ""), sheetName = "music", append=TRUE, row.names = FALSE)
write.xlsx(a_6, file = paste(file_name,".xlsx",sep = ""), sheetName = "media_markets", append=TRUE, row.names = FALSE)
write.xlsx(a_7, file = paste(file_name,".xlsx",sep = ""), sheetName = "donations", append=TRUE, row.names = FALSE)
write.xlsx(a_8, file = paste(file_name,".xlsx",sep = ""), sheetName = "csr_interests", append=TRUE, row.names = FALSE)
my_list <- list(z,x,v,l,k,a,a_3, a_4, a_5, a_6, a_7)
excel_preparer(paste(file_name,".xlsx",sep = ""))
states_with_regions <- read.xlsx(paste(file_name,".xlsx",sep = ""), sheetName = "states_with_regions")
write.csv(states_with_regions, file = paste(file_name,"_states.csv",sep = ""), row.names = FALSE)
return(my_list)
}
retrieve_mothers <- function(id_vector2, name_vector2, total_audience){
fb_ad_mothers2 <- function(id_vector,name_vector, platform){
suppressMessages(library(readxl))
kk <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector2,
name = name_vector2
)),
list(moms = data.frame(
id = id_vector,
name = name_vector
))
)
))$users
return(kk)
}
mothers <- read_excel("/Users/harrocyranka/Desktop/code/categories_for_fb_ads2.xlsx") %>% filter(type == "moms")
mothers_list_1 <- unlist(lapply(1:nrow(mothers), function(i)fb_ad_mothers2(mothers$id[i], mothers$name[i], c("facebook", "instagram"))))
mothers_df1 <- data_frame(moms = mothers$name, total = mothers_list_1) %>% arrange(desc(total))
##
fb_ad_mothers3 <- function(id_vector,name_vector, platform){
kk <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
genders = 2,
flexible_spec = list(
list(interests = data.frame(
id = id_vector2,
name = name_vector2
)),
list(family_statuses = data.frame(
id = id_vector,
name = name_vector
))
)
))$users
return(kk)
}
parents <- read_excel("/Users/harrocyranka/Desktop/code/categories_for_fb_ads2.xlsx") %>% filter(type == "family_statuses") %>% filter(name != "Parents (All)")
mothers_list_2<- unlist(lapply(1:nrow(parents), function(i)fb_ad_mothers3(parents$id[i], parents$name[i], c("facebook", "instagram"))))
mothers_df2 <- data_frame(moms = parents$name, total = mothers_list_2) %>% arrange(desc(total))
mothers_df2$moms <- trim(gsub("\\(.*\\)", "",mothers_df2$moms))
mothers_df2$moms <- gsub("Parents|parents", "Moms", mothers_df2$moms)
final_list <- list(mothers_df1, mothers_df2)
return(final_list)
}
fb_ad_gender2(NULL, NULL, "facebook")
devtools::install_github('daroczig/fbRads')
library(httr)
library(fbRads)
library(data.table)
library(jsonlite)
library(readxl)
library(xlsx)
app <- oauth_app('querying_ads_attempt', '1045624065519288', '4c14a9f680c33bcd765391712af79d83')
#Sys.setenv('HTTR_SERVER_PORT' = '1410/')
#tkn <- oauth2.0_token(
#oauth_endpoints('facebook'), app, scope = 'ads_management',
#type  = 'application/x-www-form-urlencoded', cache = FALSE)
tkn<-"EAAO2ZCVLZBbrgBALCx62QrvWZAp0IVtETSiMqGZCwMfAcaUzWo6d78ztYpua7TXBQluJPZAMNWFLLQQcWbrwQ1MVhZBw5xKYH1ZAer0Ef9ZCWZCNPbCViZB60dqf0JZCsB0HgZCLrM5SZCgaTJ1hDbpW1Q02xOWvz653r810ZD"
fbad_init(accountid = "319640814", token = tkn, version = '3.0')
library(httr)
library(fbRads)
library(data.table)
library(jsonlite)
library(readxl)
library(xlsx)
app <- oauth_app('querying_ads_attempt', '1045624065519288', '4c14a9f680c33bcd765391712af79d83')
#Sys.setenv('HTTR_SERVER_PORT' = '1410/')
#tkn <- oauth2.0_token(
#oauth_endpoints('facebook'), app, scope = 'ads_management',
#type  = 'application/x-www-form-urlencoded', cache = FALSE)
tkn<-"EAAO2ZCVLZBbrgBALCx62QrvWZAp0IVtETSiMqGZCwMfAcaUzWo6d78ztYpua7TXBQluJPZAMNWFLLQQcWbrwQ1MVhZBw5xKYH1ZAer0Ef9ZCWZCNPbCViZB60dqf0JZCsB0HgZCLrM5SZCgaTJ1hDbpW1Q02xOWvz653r810ZD"
fbad_init(accountid = "319640814", token = tkn, version = '3.0')
fb_ad_education <- function(id_vector,name_vector, platform){
library(readxl)
suppressMessages(library(dplyr))
education <- read_excel("fb_ads_education_levels.xlsx", sheet = 1)
education_vector <- NULL
for(i in 1:nrow(education)){
education_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
education_statuses = education$code[i],
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector,
name = name_vector
))
)
))$users
print(paste(education$education_status[i]," -"," Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
education_frame <- as.data.frame(cbind(education$education_status,education_vector))
colnames(education_frame) <- c("Education", "Count")
education_frame$Count <- as.numeric(as.character(education_frame$Count))
education_frame <- arrange(education_frame, desc(Count))
return(education_frame)
}
fb_ad_income <- function(id_vector,name_vector, platform){
suppressMessages(library(readxl))
incomes <- read_excel("income_distribution_fb_ads.xlsx", sheet = 2)
colnames(incomes) <- c("name", "key")
incomes$key <- gsub('"',"",incomes$key)
income_vector <- NULL
for(i in 1:nrow(incomes)){
income_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector,
name = name_vector
)),
list(income = data.frame(
id = incomes$key[i],
name = incomes$name[i]
))
)
))$users
print(paste(incomes$name[i],"-"," Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
income_data_frame <- as.data.frame(cbind(incomes$name,income_vector))
colnames(income_data_frame) <- c("Bracket", "Count")
income_data_frame$Count <- as.numeric(as.character(income_data_frame$Count))
income_data_frame$Bracket <- as.character(income_data_frame$Bracket)
return(income_data_frame)
}
fb_ad_age <- function(id_vector, name_vector, platform){
suppressMessages(library(readxl))
age <- read_excel("age_for_fb_ads.xlsx", sheet = 1)
age_vector <- NULL
for(i in 1:nrow(age)){
age_vector[i] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(age$age_1[i]),
age_max = unbox(age$age_2[i]),
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector,
name = name_vector
))
)
))$users
print(paste(age$age_1[i],"-",age$age_2," Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
age_data_frame <- as.data.frame(cbind(age$Category, age_vector))
colnames(age_data_frame) <- c("Age Category","Count")
age_data_frame$Count <- as.numeric(age_data_frame$Count)
return(age_data_frame)
}
fb_ad_state <- function(id_vector, name_vector, platform){
suppressMessages(library(readxl))
states <- read.csv("state_codes_for_fb_ads.csv")
states_vector <- NULL
for(i in 1:nrow(states)){
states_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(regions =data.frame(key = as.character(states$key[i]))),
publisher_platforms = platform,
flexible_spec = list(list(
interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
)
))
))$users
print(paste(states$name[i], " Retrieved", " for ", name_vector,sep = ""))
}
state_data_frame <- as.data.frame(cbind(states$name,states_vector))
colnames(state_data_frame) <- c("State", "Count")
state_data_frame$Count <- as.numeric(state_data_frame$Count)
return(state_data_frame)
}
fb_ad_top_dmas <- function(id_vector, name_vector, the_platform){
suppressMessages(library(readxl))
states <- read_excel("dma_fb_list.xlsx", sheet = 1)
states <- states[c(1:50),]
states_vector <- NULL
for(i in 1:50){
states_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(geo_markets = data.frame(key = states$key[i])),
publisher_platforms = the_platform,
flexible_spec = list(list(
interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
)
))
))$users
print(paste(states$name[i], " Retrieved", " for ", name_vector,sep = ""))
}
dma_data_frame <- as.data.frame(cbind(states$name,states_vector))
colnames(dma_data_frame) <- c("dma", "count")
dma_data_frame$count <- as.numeric(dma_data_frame$count)
dma_data_frame <- arrange(dma_data_frame, desc(count))
return(dma_data_frame)
}
fb_ad_gender <- function(id_vector, name_vector, platform){
gender_identifier <- c("Male", "Female")
gender_numbers <- c(1,2)
gender_vector <- NULL
for(i in 1:2){
gender_vector[i] <- fbad_reachestimate(targeting_spec = list(
genders = gender_numbers[i],
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(list(
interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
)
))
))$users
print(paste(gender_identifier[i], " Retrieved", " for ", name_vector,sep = ""))
}
my_data_frame <- as.data.frame(cbind(gender_identifier,as.numeric(as.character(gender_vector))))
colnames(my_data_frame) <- c("Gender", "Count")
return(my_data_frame)
}
fb_ad_ideology <- function(id_vector, name_vector, platform){
categories <- read_excel("categories_for_fb_ads.xlsx", sheet = 1)
political <- subset(categories, categories$type == "politics")
political_vector <- NULL
for(i in 1:nrow(political)){
political_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector,
name = name_vector
)),
list(politics = data.frame(
id = political$id[i],
name = political$Name[i]
))
))
)$users
print(paste(as.character(political$Name)[i], " Retrieved", " for ", as.character(name_vector) ,sep = ""))
}
ideology_vector <- c("Very Liberal", "Liberal", "Moderate","Conservative", "Very Conservative",
"Conservative Activist", "Liberal Activist",
"Conservative Donor", "Liberal Donor")
my_data_frame <- as.data.frame(cbind(ideology_vector,as.numeric(as.character(political_vector))))
colnames(my_data_frame) <- c("Politics","Count")
return(my_data_frame)
}
fb_ad_race <- function(id_vector, name_vector, platform){
race_ids <- c("6021722613183","6018745176183","6003133212372")
race_names <- c("Asian American (US)","African American (US)","Hispanic (US - All)","White")
race_vector <- NULL
##get minorities##
for(i in 1:3){
race_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector,
name = name_vector
)),
list(behaviors = data.frame(
id = race_ids[i],
name = race_names[i]
))
)
))$users
print(paste(race_names[i]," Retrieved", " for ", name_vector,sep = ""))
}
##get whites
race_vector[4] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
))),
exclusions  = list(behaviors = data.frame(
id = as.character(race_ids),
name =as.character(race_vector)
))
)
)$users
print(paste("Whites retrieved for ",name_vector, sep = ""))
race_data_frame <- as.data.frame(cbind(race_names, race_vector))
colnames(race_data_frame) <- c("Ethnic/Cultural Group","Count")
race_data_frame$Count <- as.numeric(race_data_frame$Count)
race_data_frame$percent <- race_data_frame$Count/sum(race_data_frame$Count)
race_data_frame <- race_data_frame[c(4,2,3,1),]
return(race_data_frame)
}
fb_ad_parents <- function(id_vector, name_vector, my_platform){
suppressMessages(library(readxl))
if(my_platform == "Combined"){
my_platform <- c("facebook","instagram")
}else{
my_platform = my_platform
}
categories <- read_excel("categories_for_fb_ads2.xlsx")
parents <- categories[1:8,]
parents <- categories[c(8,1,2,3,4,5,6,7),]
print(paste('Fetching parents data for ', name_vector))
parents_vector <- unlist(lapply(1:nrow(parents), function(i)fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = my_platform,
flexible_spec = list(
list(interests = data.frame(
id = id_vector,
name = name_vector
)),
list(family_statuses = data.frame(
id = parents$id[i],
name = parents$name[i]
))
)
))$users
))
parents_data_frame <- as.data.frame(cbind(parents$name, parents_vector))
colnames(parents_data_frame) <- c("Parents","Count")
parents_data_frame$Count <- as.numeric(parents_data_frame$Count)
return(parents_data_frame)
}
fb_get_all <- function(id_vector, name_vector, file_name, my_platform){
options(stringsAsFactors = FALSE)
options(scipen = 999)
incomes <- read_excel("income_distribution_fb_ads.xlsx", sheet = 1)
states <- read.csv("state_codes_for_fb_ads.csv")
age <- read_excel("age_for_fb_ads.xlsx", sheet = 1)
if(my_platform == "Combined"){
my_platform <- c("facebook","instagram")
}else{
my_platform = my_platform
}
z <- fb_ad_income(id_vector = id_vector, name_vector = name_vector, my_platform)
x <- fb_ad_age(id_vector = id_vector, name_vector = name_vector, my_platform)
v <- fb_ad_state(id_vector = id_vector, name_vector = name_vector, my_platform)
k <- fb_ad_race(id_vector = id_vector, name_vector = name_vector, my_platform)
l <- fb_ad_gender(id_vector = id_vector, name_vector = name_vector, my_platform)
a <- fb_ad_ideology(id_vector = id_vector, name_vector = name_vector, my_platform)
a_2 <- fb_ad_industries(id_vector = id_vector, name_vector = name_vector, my_platform)
a_3 <- fb_ad_education(id_vector = id_vector, name_vector = name_vector, my_platform)
write.xlsx(z, file = paste(file_name,".xlsx",sep = ""), sheetName = "income", append=FALSE, row.names = FALSE)
write.xlsx(x, file = paste(file_name,".xlsx",sep = ""), sheetName = "age", append=TRUE, row.names = FALSE)
write.xlsx(v, file = paste(file_name,".xlsx",sep = ""), sheetName = "state", append=TRUE, row.names = FALSE)
write.xlsx(k, file = paste(file_name,".xlsx",sep = ""), sheetName = "ethnicity", append=TRUE, row.names = FALSE)
write.xlsx(l, file = paste(file_name,".xlsx",sep = ""), sheetName = "gender", append=TRUE, row.names = FALSE)
write.xlsx(a, file = paste(file_name,".xlsx",sep = ""), sheetName = "ideology", append=TRUE, row.names = FALSE)
write.xlsx(a_2, file = paste(file_name,".xlsx",sep = ""), sheetName = "industries", append=TRUE, row.names = FALSE)
write.xlsx(a_3, file = paste(file_name,".xlsx",sep = ""), sheetName = "education", append=TRUE, row.names = FALSE)
my_list <- list(z,x,v,l,k,a,a_2,a_3)
return(my_list)
}
fb_ad_gender(NULL, NULL, "facebook")
fb_ad_income(NULL, NULL, "facebook")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
EAAHmHiwelgUBAOZBPWHh3rVi9FNHhh0ernO59DB9kk7wAT8N0DigiWJhoL0A07mhpQgwR6wp8Q4BaaZAjQZBFoFmFhAdelZCJHNGGvnvRFveIz9sGzfJerpQL4ZCwOl05pu6VrOfiSu1MeWJGngV8O50tAXZCDRZAZAyCoOJOjM9nAZDZD"
token <- "EAAHmHiwelgUBAOZBPWHh3rVi9FNHhh0ernO59DB9kk7wAT8N0DigiWJhoL0A07mhpQgwR6wp8Q4BaaZAjQZBFoFmFhAdelZCJHNGGvnvRFveIz9sGzfJerpQL4ZCwOl05pu6VrOfiSu1MeWJGngV8O50tAXZCDRZAZAyCoOJOjM9nAZDZD"
accounts <- fbad_get_my_ad_accounts(token, version = '3.1')
library(fbRads)
token <- "EAAHmHiwelgUBAOZBPWHh3rVi9FNHhh0ernO59DB9kk7wAT8N0DigiWJhoL0A07mhpQgwR6wp8Q4BaaZAjQZBFoFmFhAdelZCJHNGGvnvRFveIz9sGzfJerpQL4ZCwOl05pu6VrOfiSu1MeWJGngV8O50tAXZCDRZAZAyCoOJOjM9nAZDZD"
accounts <- fbad_get_my_ad_accounts(token, version = '3.1')
accoutns
accounts
account <- sample(accounts$account_id, 1)
fbad_init(accountid = account, token = token, version = '3.1')
fb_ad_us_audience <- function(id_vector, name_vector, platform){
audience <- NULL
audience <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(countries = 'US'),
publisher_platforms = platform,
flexible_spec = list(
list(interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
))
)
))$users
print(paste("US Audience", " Retrieved", " for ", name_vector,sep = ""))
return(audience)
}
fb_ad_us_audience(NULL, NULL, "facebook")
fbad_get_search(q = "Boston Celtics", type ="targetingsearch")[,1:3]
source("/Users/harrocyranka/Desktop/code/r_terminal_Scripts/facebook_ads_to_source.R")
fbad_get_search(q = "Okcupid", type = "adinterest")
fb_ad_us_audience("6003688554278","okcupid")
fb_ad_us_audience("6003688554278","okcupid", c("facebook", "instagram"))
fb_ad_us_audience("6003419733119","okcupid", c("facebook", "instagram"))
remove(list =ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/tidy_tuesday_week_21/")
library(tidyverse);library(readxl);library(lubridate)
x <- read_csv("california_fires_1.csv") %>% dplyr::rename(year = year_) %>%
mutate(month = month(ymd(alarm_date)))
y <- read_excel("avg_temperature.xlsx") %>%
rename(mean_temperature = Value)
z <- x %>% left_join(y, by = c("year" = "Date", "month" = "Month"))
k <- z %>% group_by(year, month) %>%
summarise(total = n(),
avg_temperature = mean(mean_temperature,na.rm = TRUE))  %>%
filter(!is.na(month))
k %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
View(k)
##Basic Model Fitting
no_outlier <- k %>% filter(total <200)
##Basic Model Fitting
no_outlier <- k %>% filter(total <200)
fit_1 <- glm(total~avg_temperature, family = "poisson")
##Basic Model Fitting
no_outlier <- k %>% filter(total <200)
fit_1 <- glm(total~avg_temperature, family = "poisson", data = no_outlier)
##Basic Model Fitting
no_outlier <- k %>% filter(total <200)
fit_1 <- glm(total~avg_temperature, family = "poisson", data = no_outlier)
arm::display(fit_1)
summary(fit_1)
summary(fit_1)
install.packages("COUNT")
##Basic Model Fitting
library(COUNT)
modelfit(fit_1)
fit_1$deviance
arm::display(fit_1)
fit_1$deviance
summary(fit_1)
summary(fit_1)
fit_1$deviance
fit_1$deviance/671
k
z
remove(list =ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
setwd("/Users/harrocyranka/Desktop/rviz/tidy_tuesday_week_21/")
library(tidyverse);library(readxl);library(lubridate)
x <- read_csv("california_fires_1.csv") %>% dplyr::rename(year = year_) %>%
mutate(month = month(ymd(alarm_date)))
y <- read_excel("avg_temperature.xlsx") %>%
rename(mean_temperature = Value)
z <- x %>% left_join(y, by = c("year" = "Date", "month" = "Month"))
k <- z %>% group_by(year, month) %>%
summarise(total = n(),
avg_temperature = mean(mean_temperature,na.rm = TRUE))  %>%
filter(!is.na(month))
k %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
z %>% group_by(year, month)
z %>% group_by(year, month) %>%
filter(fire_cause == "Natural")
n_1 <- z %>% group_by(year, month) %>%
filter(fire_cause == "Natural") %>%
summarise(total = n(),
avg_temperature = mean(mean_temperature,na.rm = TRUE))  %>%
filter(!is.na(month))
n_1
n_1 %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
n_1 <- z %>% group_by(year, month) %>%
filter(fire_cause %in% c("Natural","Unknown")) %>%
summarise(total = n(),
avg_temperature = mean(mean_temperature,na.rm = TRUE))  %>%
filter(!is.na(month))
n_1 %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
View(n_1)
n_1 <- z %>% group_by(year, month) %>%
filter(fire_cause %in% c("Natural","Unknown")) %>%
summarise(total = n(),
avg_temperature = mean(mean_temperature,na.rm = TRUE))  %>%
filter(!is.na(month))
n_1 %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
n_1 <- z %>% group_by(year, month) %>%
filter(fire_cause %in% c("Natural")) %>%
summarise(total = n(),
avg_temperature = mean(mean_temperature,na.rm = TRUE))  %>%
filter(!is.na(month))
n_1 %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
n_2 <- filter(n_1, total <180)
##No Outliers and fit model
n_2 <- filter(n_1, total <180)
fit_1 <- glm(total~avg_temperature, data = n_2, family = "poisson")
fit_1
arm::display(fit_1)
summary(fit_1)
summary(fit_1)
fit_1$deviance/2367
n_2 %>%
ggplot(aes(x = avg_temperature, y = total)) + geom_point() + theme_bw()
